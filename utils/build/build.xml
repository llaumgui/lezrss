<?xml version="1.0" encoding="UTF-8"?>
<project name="lezrss" default="ci" basedir="../..">
    <!--
        __________________________________________________________________ ChangeLog
        build XML based on version 1.1

        ChangeLog:
            - Version 1.1:
               - Add QATools
               - Add JSLint
               - Add CSSLint
            - Version 1.0:
                - 1.0: First release
    -->





    <!--
        __________________________________________________________________ Setup
    -->
    <!-- Path -->
    <property name="dir.source" value="${project.basedir}" />
    <property name="dir.build" value="${project.basedir}/../build" />
    <property name="dir.zip" value="${project.basedir}/.." />
    <property name="version" value="null" />

    <!-- QA : QATools PHP -->
    <property name="qatools.php.cmd" value="/opt/qatools/bin/qatools-php.php" />
    <property name="qatools.php.options" value="" />
    <property name="qatools.php.options.include" value="" />
    <property name="qatools.php.options.exclude" value="-e '@tests@'" />

    <!-- QA : QATools eZTpl -->
    <property name="qatools.eztpl.ezpublish.dir" value="/opt/ezpublish" />
    <property name="qatools.eztpl.cmd" value="/opt/qatools/bin/qatools-eztpl.php" />
    <property name="qatools.eztpl.options" value="" />
    <property name="qatools.eztpl.options.include" value="" />
    <property name="qatools.eztpl.options.exclude" value="" />

    <!-- QA : JSLint -->
    <property name="jslint.cmd" value="jslint" />
    <property name="jslint.tmp.alljs" value="/tmp/jenkins_jslint_${phing.project.name}_all.js" />
    <property name="jslint.rules" value="--browser --predef $,document,jQuery, --sloppy" />

    <!-- QA : CSSLint -->
    <property name="csslint.cmd" value="csslint" />
    <property name="csslint.tmp.allcss" value="/tmp/jenkins_csslint_${phing.project.name}_css.css" />
    <property name="csslint.rules.errors" value="adjoining-classes,box-model,box-sizing,compatible-vendor-prefixes,display-property-grouping,duplicate-background-images,duplicate-properties,empty-rules,errors,fallback-colors,floats,font-faces,font-sizes,gradients,ids,import,important,known-properties,outline-none,overqualified-elements,qualified-headings,regex-selectors,rules-count,shorthand,text-indent,unique-headings,universal-selector,vendor-prefix,zero-units" />
    <property name="csslint.rules.warnings" value="" />

    <!-- QA : Patternset -->
    <patternset id="pattern.php">
        <include name="**/*.php"/>
        <exclude name="**/*ini.append.php" />
    </patternset>

    <patternset id="pattern.css">
        <include name="**/*.css"/>
    </patternset>

    <patternset id="pattern.js">
        <include name="**/*.js"/>
    </patternset>





    <!--
        ____________________________________________________________________ CI
    -->
    <target name="ci"
        description="Continuous integration main task"
        depends="clean,qa"
    />


    <target name="clean" description="Vide les rÃ©pertoires d'artefacts">
        <delete dir="${dir.build}/api" />
        <delete dir="${dir.build}/log" />
        <delete dir="${dir.build}/pdepend" />
        <delete dir="${dir.build}/tests" />

        <mkdir dir="${dir.build}/api" />
        <mkdir dir="${dir.build}/logs" />
        <mkdir dir="${dir.build}/pdepend" />
        <mkdir dir="${dir.build}/tests" />
    </target>


    <target name="qa" description="Launch all QA tools">
        <!-- PHP -->
        <phingcall target="pdepend" />
        <phingcall target="phpmd" />
        <phingcall target="phpcpd" />
        <phingcall target="phpcs" />

        <!-- QATools -->
        <phingcall target="qatools-php" />
        <!-- phingcall target="qatools-eztpl" / -->

        <!-- Lint -->
        <!-- phingcall target="jslint" / -->
        <!--phingcall target="csslint" / -->

        <!-- Doc and stats -->
        <phingcall target="phploc" />
        <phingcall target="doxygen" />
    </target>





    <!--
        _______________________________________________________________ QA Tools
    -->
    <target name="pdepend">
        <phpdepend>
            <fileset dir="${dir.source}">
                <patternset refid="pattern.php" />
            </fileset>
            <logger type="jdepend-xml" outfile="${dir.build}/logs/jdepend.xml" />
            <logger type="jdepend-chart" outfile="${dir.build}/pdepend/dependencies.svg" />
            <logger type="overview-pyramid" outfile="${dir.build}/pdepend/overview-pyramid.svg" />
        </phpdepend>
    </target>


    <target name="phpmd">
        <phpmd>
            <fileset dir="${dir.source}">
                <patternset refid="pattern.php" />
            </fileset>
            <formatter type="xml" outfile="${dir.build}/phpmd.xml" />
        </phpmd>
    </target>


    <target name="phpcpd">
        <phpcpd>
            <fileset dir="${dir.source}">
                <patternset refid="pattern.php" />
            </fileset>
            <formatter type="pmd" outfile="${dir.build}/logs/pmd-cpd.xml"/>
        </phpcpd>
    </target>


    <target name="phpcs">
        <phpcodesniffer standard="Zeta">
            <fileset dir="${dir.source}">
                <patternset refid="pattern.php" />
            </fileset>
            <formatter type="checkstyle" outfile="${dir.build}/logs/checkstyle.xml"/>
        </phpcodesniffer>
    </target>


    <target name="qatools-php">
        <exec logoutput="true" dir="${dir.source}" command="${qatools.php.cmd}
            ${qatools.php.options.include}
            ${qatools.php.options.exclude}
            ${qatools.php.options}
            -o ${dir.build}/tests/qatools-php.xml
            ${dir.source}" escape="false" />
    </target>


    <target name="qatools-eztpl">
        <exec logoutput="true" dir="${qatools.eztpl.ezpublish.dir}" command="${qatools.eztpl.cmd}
            ${qatools.eztpl.options.include}
            ${qatools.eztpl.options.exclude}
            ${qatools.eztpl.options}
            -o ${dir.build}/tests/qatools-eztpl.xml
            ${dir.source}" escape="false" />
    </target>


    <target name="phploc">
        <exec logoutput="true" dir="${dir.source}" escape="false" command="phploc
            --log-csv '${dir.build}/logs/phploc.csv'
            '${dir.source}'" />
    </target>


    <target name="doxygen">
        <exec logoutput="true" dir="${dir.source}" command="doxygen 'utils/build/DoxyFile'" />
    </target>





    <!--
        _____________________________________________________________________ JSLint
    -->
    <target name="jslint">
        <foreach param="filename" absparam="jslint_absfilename" target="_jslint_createFilesetText">
            <fileset dir="${dir.source}">
                <patternset refid="pattern.js" />
            </fileset>
        </foreach>

        <loadfile property="jslint_all_js" file="${jslint.tmp.alljs}"/>

        <exec command="${jslint.cmd} ${jslint.rules}
                     --report xml
                     ${jslint_all_js} > ${dir.build}/build/logs/jslint.xml"
            passthru="true" />

        <delete file="${jslint.tmp.alljs}" />
    </target>


    <target name="_jslint_createFilesetText" >
        <echo file="${jslint.tmp.alljs}" append="true">${jslint_absfilename} </echo>
    </target>





    <!--
        _____________________________________________________________________ CSSLint
    -->
    <target name="csslint">
        <foreach param="filename" absparam="csslint_absfilename" target="_csslint_createFilesetText">
            <fileset dir="${dir.source}">
                <patternset refid="pattern.css" />
            </fileset>
        </foreach>

        <loadfile property="csslint_all_css" file="${csslint.tmp.allcss}"/>

        <exec command="${csslint.cmd}
                     --format=lint-xml
                     --errors=${csslint.rules.errors}
                     ${csslint_all_css} > ${dir.build}/logs/csslint.xml"
            passthru="true" />

        <delete file="${csslint.tmp.allcss}" />
    </target>


    <target name="_csslint_createFilesetText" >
        <echo file="${csslint.tmp.allcss}" append="true">${csslint_absfilename} </echo>
    </target>





    <!--
        _______________________________________________________________ Delivery
    -->
    <target name="build" description="Zip builder">
        <if><equals arg1="${version}" arg2="null" /><then>
            <echo message='The version is not set ! Use "phing build  -Dversion=foo"' />
            </then>
        <else>
            <phingcall target="_build-archive" />
            </else>
        </if>
    </target>


    <target name="_build-archive">
        <echo>Build version ${version}</echo>

        <delete dir="${dir.zip}/${phing.project.name}-${version}" />
        <delete dir="${dir.zip}/${phing.project.name}-${version}.zip" />
        <mkdir dir="${dir.zip}/${phing.project.name}-${version}" />

        <copy todir="${dir.zip}/${phing.project.name}-${version}" >
            <fileset dir="${dir.source}">
                <include name="*.php" />
                <include name="*.png" />
                <include name="doc/*" />
            </fileset>
        </copy>

        <foreach param="filename" absparam="absfilename" target="_build-set-header">
            <fileset dir=".">
                <include name="*.php"/>
            </fileset>
        </foreach>

        <zip destfile="${dir.zip}/${phing.project.name}-${version}.zip"
            prefix="${phing.project.name}/">
            <fileset dir="${dir.zip}/${phing.project.name}-${version}">
                <include name="**/**" />
            </fileset>
        </zip>

        <delete dir="${dir.zip}/${phing.project.name}-${version}" />
    </target>


    <target name="_build-set-header" description="Set tag @version in header">
        <exec logoutput="true" dir="${dir.zip}/${phing.project.name}-${version}" command="
            sed -i 's/\/\/autogentag\/\//${version}/g' ${absfilename};" />
    </target>

</project>
